name: Release Backstage

on:
  push:
    branches:
      - main
    paths:
      - 'backstage/**'
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  backstage:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set tag
        run: echo "VERSION_TAG=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT
        id: tag

      - name: Set Node.js 18.x
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18.x

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run yarn install
        uses: borales/actions-yarn@v4
        with:
          dir: backstage
          cmd: install

      - name: Build backend bundle
        uses: borales/actions-yarn@v4
        with:
          dir: backstage
          cmd: build:backend

      - name: Build the image
        uses: borales/actions-yarn@v4
        with:
          dir: backstage
          cmd: build-image --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backstage:${{vars.BACK_STACK_VERSION}}_${{ steps.tag.outputs.VERSION_TAG }} --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backstage:latest

      # Use docker push command directly to work with docker login action.
      - name: Push the image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backstage:${{vars.BACK_STACK_VERSION}}_${{ steps.tag.outputs.VERSION_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backstage:latest
